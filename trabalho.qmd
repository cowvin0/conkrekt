---
format: pdf
lang: pt
bibliography: includes/bib.bibtex
urlcolor: SeaGreen
linkcolor: SeaGreen
title: kek
subtitle: UFPB - Regressão I
author:
  - name: Paulo Ricardo Seganfredo Campana
  - name: Gabriel de Jesus Pereira
date: today
date-format: long
warning: false
echo: false
cache: true
monofont: "Ubuntu Mono"
monofontoptions: Scale = 1
fig-cap-location: top
---

::: hidden
\pagestyle{empty}
\thispagestyle{empty}
:::

```{r}
library(tidyverse)
library(tidymodels)
library(kableExtra)
options(tidymodels.dark = TRUE)
set.seed(42)

data <- concrete |> 
    rename(
        cimento = cement,
        escória_de_aço = blast_furnace_slag,
        cinzas_pulverizadas = fly_ash,
        água = water,
        superplastificante = superplasticizer,
        agregado_graúdo = coarse_aggregate,
        agregado_miúdo = fine_aggregate,
        tempo = age,
        força_compressiva = compressive_strength
    )

splits <- initial_split(data)
train <- training(splits)
test <- testing(splits)
```

# Resumo
ESCREVER MERDA

# Introdução 
O concreto é um dos matérias de construção mais utilizados na engenharia civil devido à sua durabilidade, versatilidade e resistência. Ele é composto por agregados, água e principalmente cimento. Analisando o cenário e as necessidades da engenharia civil, foi proposto a modelagem da força compressiva do concreto para a possibilidade de expandir o conhecimento sobre concreto de alta performance na indústria. Para isso, utilizamos um banco com dados experimentais de diferentes combinações de substâncias que compõem o concreto, o tempo que a mistura foi deixada para secar e a força compressiva final. 

Fazendo uso desses dados, da modelagem e análise estatística, foi possível chegar em modelos de regressão linear múltipla, focaremos em um modelo mais simples, com o intuito de poder saber o que leva um concreto a ser mais resistente do que outro e para previsão da força compressiva de certa mistura baseado nas variáveis de estudo.

# Metodologia
As análises a seguir foram realizadas usando a linguagem de programação R [@R] com o *framework* de modelagem estatística *tidymodels* [@tidymodels]. Os códigos utilizados estão disponíveis no github [@github] e os documentos do relatório e apresentação foram feitos com Quarto [@quarto], um sistema de escrita e publicação científica.

No conjunto de dados sobre concreto de alta performance [@concrete] estudamos um modelo de regressão linear múltipla em que a `força_compressiva` do concreto é explicada a princípio pelas variáveis que achamos importantes no estudo: o `tempo` de secagem da mistura final (em dias) e os matérias que compõem a mistura: `cimento`, `escória_de_aço`, `cinzas_pulverizadas`, `água`, `superplastificante`, `agregado_graúdo` e `agregado_miúdo` (em quilogramas por metro cúbico). Algumas destas variáveis não estiveram presente no modelo final devido a não serem significantes no modelo linear.

Sendo assim, ajustamos dois modelos, um primeiro mais simples utilizando apenas 4 dos regressores e algumas transformações com o objetivo de estabelecer uma relação compreensível das substâncias que mais interferem na força compressiva do concreto. O segundo modelo é mais complexo, trazendo a interação entre as variáveis e composição das mesmas em novas medidas, este foca no poder preditivo da regressão. Porém a complexidade deste segundo modelo, mesmo que significativa, não se provou útil para a melhoria das métricas de performance, então decidimos não incluir nos resultados finais.

Fizemos uso da transformação Yeo-Johnson [@yeo], que de maneira similar a Box-Cox, é uma transformação feita para tornar a distribuição dos regressores mais normais e estabilizar a variância, com a vantagem de também funcionar para dados que contém valores 0 e números negativos. O parâmetro $\lambda$ é estimado por máxima verossimilhança.

$$
\psi(\lambda, x) = \begin{cases}
    [(1 + x)^\lambda - 1] / \lambda \hspace{+48pt}    \lambda \neq 0, \; x \geqslant 0 \\
    \ln(1 + x)  \hspace{+82pt}                        \lambda = 0, \; x \geqslant 0 \\
    [(1 - x)^{2 - \lambda} - 1] / (\lambda - 2) \quad \lambda \neq 2, \; x < 0 \\
    -\ln(1 - x) \hspace{+72pt}                        \lambda = 2, \; x < 0
 \end{cases}
$$

A escolha de variáveis e transformações usadas foram julgadas através das métricas de performance do coeficiente de determinação ($R^2$) e raiz do erro quadrático médio ($\text{RMSE}$ ou $\sigma$) porém mantendo todos os coeficientes do modelo significativos nos testes de hipótese individuais.

::: {layout-ncol=2}
$$
R^2 = 1 - \dfrac{SS_{\text{resid}}}{SS_{\text{total}}}
$$

$$
\text{RMSE} = \sqrt{\dfrac{1}{n} \sum_{i = 0}^n (\hat y_i - y_i)^2}
$$
:::

# Resultados

## Construção do modelo
Primeiramente, escolhemos as variáveis que foram mais importantes para o alcance dos objetivos citados acima: `cimento`, `escória_de_aço`, `água` e `tempo`. Realizamos uma transformação de raiz quadrada na variável resposta, `força_compressiva` e transformações Yeo-Johnson em todos os regressores exceto `água`, onde a estimativa de $\lambda$ foi muito próximo de 1, desse modo temos as seguintes variáveis transformadas:

: Transformações realizadas nas variáveis do modelo {#tbl-yeo}

|Variável           | $\lambda$|             Transformação|
|:------------------|---------:|:-------------------------|
|`força_compressiva`|          |$y' = \sqrt y$            |
|`cimento`          |     0.197|$x' = 5.065 [(1 + x)^{ 0.197} - 1]$|
|`escória_de_aço`   |     0.066|$x' = 15.16 [(1 + x)^{ 0.066} - 1]$|
|`tempo`            |    -0.006|$x' = \ln(1 + x)$         |

```{r}
workflow <- workflow() |> 
    add_model(linear_reg(), formula = força_compressiva ~ . - 1) |> 
    add_recipe(
        train |> 
            recipe(força_compressiva ~ cimento + escória_de_aço + água + tempo) |>
            step_sqrt(força_compressiva) |> 
            step_YeoJohnson(cimento, escória_de_aço, tempo) |> 
            step_mutate(tempo2 = tempo^2, tempo3 = tempo^3) |> 
            step_rm(tempo)
    )

model <- workflow |> 
    fit(data) |> 
    extract_fit_engine()
```

```{r}
#| output: false
model |>
    summary()

workflow |>
    last_fit(splits) |>
    collect_metrics()
```

Devido a relação entre a força compressiva e o tempo de secagem ser não linear, criamos duas variáveis com o tempo transformado: tempo ao quadrado e tempo ao cubo. Ajustando um modelo sem intercepto com essas variáveis temos a seguinte relação entre a força compressiva do concreto ($y'$), a quantidade de cimento ($x_1'$), água ($x_2'$), escória de aço ($x_3'$) e o tempo de secagem ($x_t'$):

$$
\hat y' = 0.769 x_1' + 0.186 x_2' - 0.023 x_3' + 0.396 x_t'^2 - 0.050 x_t'^3
$$

## Verificação das suposições do modelo linear

### Normalidade dos resíduos
É uma suposição importante para a construção de intervalos de confiança e predição para a força compressiva, para os coeficientes e para o cálculo da estatística $F$ do modelo, porém pequenos desvios da normalidade não afetam o modelo.

: Resultado dos testes para normalidade {#tbl-norm}

|Teste           | Estatística| p-valor|
|:---------------|-----------:|-------:|
|Anderson-Darling| $A = 0.812$|   0.035|
|Cramer-von Mises| $W = 0.155$|   0.020|
|Lilliefors      | $D = 0.034$|   0.007|
|Pearson         | $P = 29.97$|   0.467|
|Shapiro-Francia | $W = 0.998$|   0.263|
|Shapiro-Wilk    | $W = 0.998$|   0.217|
|Jarque-Bera     |$JB = 1.578$|   0.454|

Mais da metade dos testes da @tbl-norm não rejeitam a hipótese de normalidade dos resíduos, e gráficamente pelo Q-Q plot da @fig-norm os resíduos parecem sim ter distribuição aproximadamente normal pois se assemelham aos quantis teóricos da distribuição normal, isso já cumpre as necessidades para a correta utilização dos intervalos de confiança que se baseiam na normalidade.

```{r}
#| fig-cap: Q-Q plot dos resíduos padronizados do modelo
#| label: fig-norm
#| fig-height: 5
#| out-width: 100%

data |> 
    ggplot(aes(sample = rstandard(model))) +
    geom_qq(color = "#2E8B57", size = 0.75) +
    geom_abline(alpha = 0.1) +
    coord_obs_pred() +
    labs(x = "Quantil teórico", y = "Quantil observado") +
    theme_bw()
```

### Linearidade
Suposição essencial para o uso de um modelo de regressão linear

: Resultado dos testes para linearidade

|Teste           | Estatística|    p-valor|
|:---------------|-----------:|:----------|
|RESET           | $R = 0.800$|      0.371|
|Rainbow         | $R = 1.407$|$5.797 \times 10^{-5}$|

Os testes para linearidade do modelo discordam entre si, pelo gráfico da @fig-linear, os valores estimados do modelo para a força compressiva do concreto parecem estar de acordo com os valores observados, exceto talvez para valores baixos da força compressiva, onde o modelo parece superestimar a mesma como vista na cauda esquerda do gráfico.

```{r}
#| fig-cap: Gráfico dos valores observados versus valores estimados pelo modelo
#| label: fig-linear
#| fig-height: 4.5
#| out-width: 100%

workflow |>
    fit(data) |> 
    extract_fit_engine() |> 
    augment(new_data = data) |> 
    ggplot(aes(x = força_compressiva, y = .fitted)) +
    geom_point(aes(color = .std.resid), size = 0.75) +
    geom_abline() +
    scale_color_viridis_c() +
    coord_obs_pred() +
    labs(
        x = "Força compressiva observada",
        y = "Força compressiva estimada",
        color = "Resíduo"
    ) +
    theme_bw()
```




{{< pagebreak >}}

```{r}
workflow |>
    fit(data) |> 
    extract_fit_engine() |> 
    augment(new_data = data) |> 
    ggplot(aes(x = força_compressiva, y = .std.resid)) +
    geom_point(aes(color = .std.resid)) +
    geom_smooth(color = "#00000080", se = FALSE) +
    scale_color_viridis_c() +
    theme_bw()
```

<!-- 
normalidade
linearidade
multicolinearidade
heterocedasticidade
autocorrelação
-->



Como se tratam de dados experimentais sobre o concreto, esse conjunto inclui várias combinações de valores diferentes entre os regressores, desse modo, a correlação entre as variáveis é baixa, atingindo no máximo 50%.

# Referências

::: {#refs}
:::
