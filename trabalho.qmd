---
format: pdf
lang: pt
bibliography: includes/bib.bibtex
title: kek
subtitle: UFPB - Regressão I
author:
  - name: Paulo Ricardo Seganfredo Campana
  - name: Gabriel de Jesus Pereira
date: today
date-format: long
warning: false
echo: false
# cache: true
editor_options: 
  chunk_output_type: console
---

::: hidden
\pagestyle{empty}
\thispagestyle{empty}
:::

# Metodologia
As análises a seguir foram realizadas usando a linguagem de programação R [@R] com o *framework* de modelagem estatística *tidymodels* [@tidymodels].

Utilizamos o conjunto de dados sobre concreto de alta performance [@concrete] onde foi estudado um modelo de regressão linear múltipla em que a `força_compressiva` do concreto é explicada pelas variáveis que achamos importantes no estudo: o `tempo` de secagem da mistura final (em dias) e os materias que compõem a mistura: `cimento`, `escória_de_aço`, `cinzas_pulverizadas`, `água`, `superplastificante`, `agregado_graúdo` e `agregado_fino` (em kilogramas por metro cúbico).

Como se tratam de dados experimentais sobre o concreto, esse conjunto inclui várias combinações diferentes entre os regressores, desse modo a correlação entre as variáveis é baixa, atingindo no máximo 50%. Atentendo a suposição de não multicolinearidade do modelo.

<!-- 
normalidade
linearidade
multicolinearidade
heterocedasticidade
autocorrelação
-->




```{r}
#| output: false
library(tidyverse)
library(tidymodels)
data <- concrete
data |> 
    ggplot(aes(x = cement)) +
    geom_density() +
    theme()
 
data |> 
    recipe(compressive_strength ~ .) |> 
    step_rm(superplasticizer) |>
    step_YeoJohnson(all_numeric_predictors()) |>
    step_mutate(wc = water / cement) |>
    step_rm(coarse_aggregate, fine_aggregate, cement) |>
    # step_interact(~ all_numeric_predictors() : all_numeric_predictors()) |>
    step_poly(all_numeric_predictors(), -fly_ash,degree = 2) |>
    prep() |> 
    bake(data) |> 
    lm(compressive_strength ~ ., data = _) ->modelo
    summary()
```

```{r}
data |> 
  ggplot(aes(x = compressive_strength, y = predict(modelo))) +
  geom_point() +
  geom_abline()+
  coord_obs_pred() +
  theme_bw()
```

